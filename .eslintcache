[{"D:\\react-project\\epic\\src\\index.js":"1","D:\\react-project\\epic\\src\\reportWebVitals.js":"2","D:\\react-project\\epic\\src\\App.js":"3","D:\\react-project\\epic\\src\\components\\Footer.js":"4","D:\\react-project\\epic\\src\\components\\Header.js":"5","D:\\react-project\\epic\\src\\pages\\Home.js":"6","D:\\react-project\\epic\\src\\pages\\About.js":"7","D:\\react-project\\epic\\src\\pages\\History.js":"8","D:\\react-project\\epic\\src\\components\\Loading.js":"9","D:\\react-project\\epic\\src\\pages\\Login.js":"10","D:\\react-project\\epic\\src\\pages\\Register.js":"11","D:\\react-project\\epic\\src\\stores\\index.js":"12","D:\\react-project\\epic\\src\\stores\\auth.js":"13","D:\\react-project\\epic\\src\\models\\index.js":"14","D:\\react-project\\epic\\src\\stores\\user.js":"15","D:\\react-project\\epic\\src\\components\\Uploader.js":"16","D:\\react-project\\epic\\src\\stores\\image.js":"17","D:\\react-project\\epic\\src\\components\\Tips.js":"18","D:\\react-project\\epic\\src\\components\\List.js":"19","D:\\react-project\\epic\\src\\stores\\history.js":"20"},{"size":521,"mtime":1613904536417,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1609514060633,"results":"23","hashOfConfig":"22"},{"size":1296,"mtime":1611822390879,"results":"24","hashOfConfig":"22"},{"size":335,"mtime":1611821220762,"results":"25","hashOfConfig":"22"},{"size":2481,"mtime":1612502889445,"results":"26","hashOfConfig":"22"},{"size":398,"mtime":1612318161816,"results":"27","hashOfConfig":"22"},{"size":435,"mtime":1613886476965,"results":"28","hashOfConfig":"22"},{"size":217,"mtime":1612436001422,"results":"29","hashOfConfig":"22"},{"size":133,"mtime":1611817886436,"results":"30","hashOfConfig":"22"},{"size":3294,"mtime":1612411054044,"results":"31","hashOfConfig":"22"},{"size":3981,"mtime":1612411280291,"results":"32","hashOfConfig":"22"},{"size":442,"mtime":1612435576491,"results":"33","hashOfConfig":"22"},{"size":1689,"mtime":1612438166883,"results":"34","hashOfConfig":"22"},{"size":1946,"mtime":1612436506273,"results":"35","hashOfConfig":"22"},{"size":407,"mtime":1611994160600,"results":"36","hashOfConfig":"22"},{"size":4914,"mtime":1613904062399,"results":"37","hashOfConfig":"22"},{"size":1283,"mtime":1612438146408,"results":"38","hashOfConfig":"22"},{"size":544,"mtime":1612318444649,"results":"39","hashOfConfig":"22"},{"size":1745,"mtime":1613904119384,"results":"40","hashOfConfig":"22"},{"size":1096,"mtime":1612438001765,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11k9wpk",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\react-project\\epic\\src\\index.js",[],"D:\\react-project\\epic\\src\\reportWebVitals.js",[],["91","92"],"D:\\react-project\\epic\\src\\App.js",[],"D:\\react-project\\epic\\src\\components\\Footer.js",[],"D:\\react-project\\epic\\src\\components\\Header.js",["93"],"import React, {useEffect} from \"react\";\r\nimport {Link, NavLink, useHistory} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport {Button} from \"antd\";\r\nimport {useStore} from \"../stores\";\r\nimport {observer} from \"mobx-react\";\r\n\r\nconst Header = styled.header`\r\n  background: #343A40;\r\n  padding: 20px 200px;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  display: flex;\r\n  align-items: center;  \r\n`;\r\n\r\n\r\nconst StyledLink = styled(NavLink)`\r\n  color:#CCCDCF;\r\n  margin-left: 30px;\r\n  &:hover,&.active{\r\n    color:#ffffff;\r\n  }\r\n`;\r\nconst StyledButton = styled(Button)`\r\n margin-left: 10px;\r\n  background: none;\r\n  border: none;\r\n  font-size: 20px;\r\n  line-height: 20px;\r\n  color:#fff;\r\n  &:hover,&:focus{\r\n    background: #6C757D;\r\n    border: none;\r\n  }\r\n`;\r\nconst Login = styled.div`\r\nmargin-left: auto;\r\ncolor:#fff;\r\n`;\r\nconst Logo = styled(Link)`\r\n  color: #CCCDCF;\r\n  font-size: 28px;\r\n   &:hover,&.active{\r\n    color:#ffffff;\r\n  }\r\n  \r\n`;\r\n\r\nconst Component = observer(() => {\r\n    const {UserStore, AuthStore} = useStore();\r\n    const history = useHistory();\r\n    const handleLogin = () => {\r\n        history.push(\"/login\");\r\n\r\n    };\r\n    const handleLogout = () => {\r\n        AuthStore.logout();\r\n    };\r\n    const handleRegister = () => {\r\n        history.push(\"/register\");\r\n    };\r\n    useEffect(() => {\r\n        UserStore.setUser();\r\n    }, []);\r\n    return (\r\n        <Header>\r\n            <Logo to=\"/\">怪人图床</Logo>\r\n            <nav>\r\n                <StyledLink to=\"/\" activeClassName=\"active\" exact>上传图片</StyledLink>\r\n                <StyledLink to=\"/history\" activeClassName=\"active\">上传历史</StyledLink>\r\n                <StyledLink to=\"/about\" activeClassName=\"active\">关于</StyledLink>\r\n            </nav>\r\n            <Login>\r\n                {\r\n                    UserStore.currentUser ?\r\n                        <>{UserStore.currentUser.attributes.username}<StyledButton type=\"primary\"\r\n                                                                                   onClick={handleLogout}>注销</StyledButton></>\r\n                        :\r\n                        <>\r\n                            <StyledButton type=\"primary\" onClick={handleLogin}>登录</StyledButton>\r\n                            <StyledButton type=\"primary\" onClick={handleRegister}>注册</StyledButton>\r\n                        </>\r\n\r\n                }\r\n\r\n            </Login>\r\n\r\n        </Header>\r\n    );\r\n});\r\n\r\nexport default Component;","D:\\react-project\\epic\\src\\pages\\Home.js",["94"],"import React from \"react\";\r\nimport {observer} from \"mobx-react\";\r\nimport {useStore} from \"../stores\";\r\nimport Uploader from \"../components/Uploader\";\r\nimport Tips from \"../components/Tips\";\r\n\r\nconst Home = observer(() => {\r\n    const {UserStore} = useStore();\r\n    return (\r\n        <>\r\n           <Tips>请先登录</Tips>\r\n            <Uploader/>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Home;","D:\\react-project\\epic\\src\\pages\\About.js",["95"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Div = styled.div`\r\n font-size: 40px;\r\n display: flex;\r\n margin: 0 auto;\r\n flex-direction: column;\r\n align-items: center;\r\n`;\r\n\r\nfunction About() {\r\n    return (\r\n        <>\r\n            <Div><span>作者是一个刚进入前端行业的菜鸡~</span>\r\n                <a href=\"\">github</a>\r\n            </Div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default About;","D:\\react-project\\epic\\src\\pages\\History.js",[],"D:\\react-project\\epic\\src\\components\\Loading.js",[],"D:\\react-project\\epic\\src\\pages\\Login.js",["96"],"import React from \"react\";\r\nimport {Form, Input, Button} from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport {useStore} from \"../stores\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n\r\nconst Wraper = styled.div`\r\n  max-width: 600px;\r\n  margin: 30px auto;\r\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst LoginButton = styled(Button)`\r\n  width: 100%;\r\n  background: #fff;\r\n  border: #6C757D 1px solid;\r\n  color:#6C757D;\r\n  &:hover{\r\n    background: #6C757D;\r\n    border: none;\r\n  }\r\n`;\r\n\r\n\r\nconst Component = () => {\r\n    const {AuthStore} = useStore();\r\n    const history = useHistory();\r\n\r\n    const onFinish = values => {\r\n        console.log(\"Success:\", values);\r\n        AuthStore.setUsername(values.username);\r\n        AuthStore.setPassword(values.password);\r\n        AuthStore.login()\r\n            .then(() => {\r\n                history.push(\"/\");\r\n            }).catch(() => {\r\n            console.log(\"登录失败，什么都不做\");\r\n        });\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n        console.log(\"Failed:\", errorInfo);\r\n    };\r\n\r\n    const validateUsername = (rule, value) => {\r\n        if (/\\W/.test(value)) return Promise.reject(\"只能是字母数字下划线\");\r\n        if (value.length < 4 || value.length > 20) return Promise.reject(\"长度为4～10个字符\");\r\n        return Promise.resolve();\r\n    };\r\n\r\n\r\n    return (\r\n        <Wraper>\r\n            <Title>登 录</Title>\r\n            <Form\r\n                size=\"large\"\r\n                name=\"basic\"\r\n                onFinish={onFinish}\r\n                layout=\"vertical\"\r\n                onFinishFailed={onFinishFailed}\r\n                size=\"large\"\r\n            >\r\n                <Form.Item\r\n                    label=\"用户名\"\r\n                    name=\"username\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"输入用户名\",\r\n                        },\r\n                        {\r\n                            validator: validateUsername\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input/>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"密码\"\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"输入密码\",\r\n                        },\r\n                        {\r\n                            min: 4,\r\n                            message: \"最少4个字符\"\r\n                        },\r\n                        {\r\n                            max: 20,\r\n                            message: \"最大20个字符\"\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password/>\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item>\r\n                    <LoginButton type=\"primary\" htmlType=\"submit\">\r\n                        登 录\r\n                    </LoginButton>\r\n                </Form.Item>\r\n            </Form>\r\n        </Wraper>\r\n    );\r\n};\r\n\r\nexport default Component;","D:\\react-project\\epic\\src\\pages\\Register.js",[],"D:\\react-project\\epic\\src\\stores\\index.js",[],"D:\\react-project\\epic\\src\\stores\\auth.js",[],"D:\\react-project\\epic\\src\\models\\index.js",["97"],"import AV, {Query, User} from \"leancloud-storage\";\r\n\r\n\r\nAV.init({\r\n    appId: \"1g3260UniFq6U8h8gqjUt8FJ-gzGzoHsz\",\r\n    appKey: \"a8O0iUpeTDfkX4JDgAReMmil\",\r\n    serverURL: \"https://1g3260un.lc-cn-n1-shared.com\"\r\n});\r\n\r\nconst Auth = {\r\n    register(username, password) {\r\n        const user = new User();\r\n        user.setUsername(username);\r\n        user.setPassword(password);\r\n        return new Promise((resolve, reject) => {\r\n            user.signUp().then((user) => resolve(user), (error) => reject(error));\r\n        });\r\n    },\r\n    login(username, password) {\r\n        return new Promise((resolve, reject) => {\r\n            User.logIn(username, password).then(user => resolve(user), error => reject(error));\r\n        });\r\n    },\r\n    logout() {\r\n        User.logOut();\r\n    },\r\n    getCurrentUser() {\r\n        return User.current();\r\n    }\r\n};\r\nconst Uploader = {\r\n    add(file, fileName) {\r\n        const item = new AV.Object(\"Image\");\r\n        const avFile = new AV.File(fileName, file);\r\n        item.set(\"filename\", fileName);\r\n        item.set(\"owner\", AV.User.current());\r\n        item.set(\"url\", avFile);\r\n        return new Promise((resolve, reject) => {\r\n                item.save().then((serverFile) => {\r\n                        resolve(serverFile);\r\n                    }, error => {\r\n                        reject(error);\r\n                    }\r\n                );\r\n            }\r\n        );\r\n    },\r\n    find({page = 0, limit = 10}) {\r\n        const query = new AV.Query(\"Image\");\r\n        query.include(\"owner\");\r\n        query.limit(limit);\r\n        query.skip(page * limit);\r\n        query.descending(\"createdAt\");\r\n        query.equalTo(\"owner\", AV.User.current());\r\n        return new Promise((resolve, reject) => {\r\n            query.find()\r\n                .then(results => {\r\n                    resolve(results);\r\n                }).catch(error => reject(error));\r\n        });\r\n    }\r\n};\r\nexport {Auth, Uploader};\r\n","D:\\react-project\\epic\\src\\stores\\user.js",[],"D:\\react-project\\epic\\src\\components\\Uploader.js",["98","99"],"import React, {useRef} from \"react\";\r\nimport {useStore} from \"../stores\";\r\nimport {observer} from \"mobx-react\";\r\nimport {Upload, message, Spin} from \"antd\";\r\nimport {InboxOutlined} from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport {useLocalStore} from \"mobx-react-lite\";\r\n\r\nconst Result = styled.div`\r\n  margin-top: 30px;\r\n  border: 1px dashed #ccc;\r\n  padding: 20px;\r\n \r\n`;\r\nconst H1 = styled.h1`\r\n  margin: 20px 0;\r\n  text-align: center;\r\n`;\r\nconst Img = styled.img`\r\n  max-width: 300px;\r\n`;\r\nconst Component = observer(() => {\r\n        const {Dragger} = Upload;\r\n        const {ImageStore, UserStore} = useStore();\r\n        const widthRef = useRef();\r\n        const heightRef = useRef();\r\n        const store = useLocalStore(() => ({\r\n            width: null,\r\n            height: null,\r\n            setWidth(width) {\r\n                store.width = width;\r\n            },\r\n            setHeight(height) {\r\n                store.height = height;\r\n            },\r\n            get widthStr() {\r\n                return store.width ? `/w/${store.width}` : \"\";\r\n            },\r\n            get heightStr() {\r\n                return store.height ? `/h/${store.height}` : \"\";\r\n            },\r\n            get fullStr() {\r\n                return ImageStore.serverFile.attributes.url.attributes.url + \"?imageView2/0\" + store.widthStr + store.heightStr;\r\n            }\r\n\r\n        }));\r\n        const bindWidthChange = () => {\r\n            store.setWidth(widthRef.current.value);\r\n        };\r\n        const bindHeightChange = () => {\r\n            store.setHeight(heightRef.current.value);\r\n        };\r\n        const props = {\r\n            showUploadList: false,\r\n            beforeUpload: file => {\r\n                ImageStore.setFile(file);\r\n                ImageStore.setFilename(file.name);\r\n                if (UserStore.currentUser === null) {\r\n                    message.warning(\"请先登录之后再上传图片！\");\r\n                    return false;\r\n                }\r\n                if (!/(svg$)|(png$)|(jpg$)|(jpeg$)|(gif$)/ig.test(file.type)) {\r\n                    message.error(\"只能上传svg/png/jpg/jpeg/gif格式的图片！\");\r\n                    return false;\r\n                }\r\n                if (file.size > 1024 * 1024 * 5) {\r\n                    message.error(\"只能上传10M以下的图片\");\r\n                    return false;\r\n                }\r\n                ImageStore.upload()\r\n                    .then((serverFile) => {\r\n                        console.log(\"上传成功\");\r\n                        console.log(serverFile);\r\n                    }).catch(() => {\r\n                    console.log(\"上传失败\");\r\n                });\r\n                return false;\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Spin tip=\"上传中\" spinning={ImageStore.isUploading}>\r\n                    <Dragger {...props}>\r\n                        <p className=\"ant-upload-drag-icon\">\r\n                            <InboxOutlined/>\r\n                        </p>\r\n                        <p className=\"ant-upload-text\"><b>将文件拖放到此处或者点击</b></p>\r\n                        <p className=\"ant-upload-hint\">\r\n                            仅支持.svg/.png/.jpg/.jpeg/.gif格式的图片，图片最大尺寸为5M\r\n                        </p>\r\n                    </Dragger>\r\n                </Spin>\r\n                {ImageStore.serverFile ?\r\n                    <Result>\r\n                        <H1>上传结果</H1>\r\n                        <dl>\r\n                            <dt>完整路径</dt>\r\n                            <dd><a target=\"_blank\"\r\n                                   href={ImageStore.serverFile.attributes.url.attributes.url}>{ImageStore.serverFile.attributes.url.attributes.url}</a>\r\n                            </dd>\r\n                            <dt>文件名</dt>\r\n                            <dd>{ImageStore.filename}</dd>\r\n                            <dt>图片预览</dt>\r\n                            <dd>\r\n                                <Img src={ImageStore.serverFile.attributes.url.attributes.url} alt=\"\"/>\r\n                            </dd>\r\n                            <dt>更多尺寸</dt>\r\n                            <dd>\r\n                                <input type=\"text\" onChange={bindWidthChange} ref={widthRef} placeholder=\"宽度（选填）\"/>\r\n                                <input type=\"text\" onChange={bindHeightChange} ref={heightRef} placeholder=\"高度（选填）\"/>\r\n                            </dd>\r\n                            <dt>定制图片预览地址</dt>\r\n                            <dd>\r\n                                <a target=\"_blank\" href={store.fullStr}>{store.fullStr}</a>\r\n                            </dd>\r\n                        </dl>\r\n                    </Result> : null}\r\n            </div>\r\n        );\r\n    })\r\n;\r\nexport default Component;","D:\\react-project\\epic\\src\\stores\\image.js",["100"],"import {observable, action, makeObservable} from \"mobx\";\r\nimport {Auth, Uploader} from \"../models\";\r\nimport {message} from \"antd\";\r\n\r\n\r\nclass ImageStore {\r\n    constructor() {\r\n        makeObservable(this);\r\n    }\r\n\r\n    @observable filename = \"\";\r\n    @observable isUploading = false;\r\n    @observable file = null;\r\n    //服务器存储的文件 展示的\r\n    @observable serverFile = null;\r\n\r\n    @action setFilename(filename) {\r\n        this.filename = filename;\r\n    }\r\n\r\n    @action setFile(file) {\r\n        this.file = file;\r\n    }\r\n\r\n    @action upload() {\r\n        this.isUploading = true;\r\n        this.serverFile = null;\r\n        return new Promise((resolve, reject) => {\r\n            Uploader.add(this.file, this.filename).then(\r\n                serverFile => {\r\n                    this.serverFile = serverFile;\r\n                    this.isUploading = false;\r\n                    resolve(serverFile);\r\n                }).catch(err => {\r\n                message.error(\"上传失败！\");\r\n                reject(err);\r\n            }).finally(() => {\r\n                this.isUploading = false;\r\n            });\r\n        });\r\n    }\r\n\r\n    @action reset() {\r\n        this.isUploading = false;\r\n        this.serverFile = null;\r\n    }\r\n\r\n}\r\n\r\nexport default new ImageStore();","D:\\react-project\\epic\\src\\components\\Tips.js",[],"D:\\react-project\\epic\\src\\components\\List.js",["101"],"import React, {useEffect} from \"react\";\r\nimport {observer} from \"mobx-react\";\r\nimport {useStore} from \"../stores\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport {List, Spin} from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Img = styled.img`\r\n  width:100px;\r\n  height: 120px;\r\n  object-fit:contain;\r\n  border: 1px solid #eee;\r\n`;\r\nconst P = styled.p`\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n`;\r\nconst Component = observer(() => {\r\n    const {HistoryStore} = useStore();\r\n    const loadMore = () => {\r\n        HistoryStore.find();\r\n    };\r\n    useEffect(() => {\r\n        return () => {\r\n            HistoryStore.reset();\r\n        };\r\n    }, []);\r\n    return (\r\n        <InfiniteScroll\r\n            initialLoad={true}\r\n            pageStart={0}\r\n            loadMore={loadMore}\r\n            hasMore={!HistoryStore.isLoading && HistoryStore.hasMore}\r\n            useWindow={true}\r\n        >\r\n            <List\r\n                dataSource={HistoryStore.list}\r\n                renderItem={item => (\r\n                    <List.Item key={item.id}>\r\n                        <div>\r\n                            <Img src={item.attributes.url.attributes.url} style={{width: \"100px\"}} alt=\"\"/>\r\n                        </div>\r\n                        <div><P>{item.attributes.filename}</P></div>\r\n                        <div>\r\n                            <a href={item.attributes.url.attributes.url}>预览图片</a>\r\n                        </div>\r\n                    </List.Item>\r\n                )}\r\n            >\r\n                {HistoryStore.isLoading && HistoryStore.hasMore && (\r\n                    <Spin/>\r\n                )}\r\n            </List>\r\n        </InfiniteScroll>\r\n    );\r\n});\r\nexport default Component;","D:\\react-project\\epic\\src\\stores\\history.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":65,"column":8,"nodeType":"108","endLine":65,"endColumn":10,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":8,"column":12,"nodeType":"112","messageId":"113","endLine":8,"endColumn":21},{"ruleId":"114","severity":1,"message":"115","line":16,"column":17,"nodeType":"116","endLine":16,"endColumn":28},{"ruleId":"117","severity":1,"message":"118","line":69,"column":17,"nodeType":"119","endLine":69,"endColumn":29},{"ruleId":"110","severity":1,"message":"120","line":1,"column":13,"nodeType":"112","messageId":"113","endLine":1,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":99,"column":33,"nodeType":"116","endLine":100,"endColumn":95},{"ruleId":"121","severity":1,"message":"122","line":115,"column":33,"nodeType":"116","endLine":115,"endColumn":73},{"ruleId":"110","severity":1,"message":"123","line":2,"column":9,"nodeType":"112","messageId":"113","endLine":2,"endColumn":13},{"ruleId":"106","severity":1,"message":"124","line":27,"column":8,"nodeType":"108","endLine":27,"endColumn":10,"suggestions":"125"},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'UserStore'. Either include it or remove the dependency array.","ArrayExpression",["128"],"no-unused-vars","'UserStore' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Query' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'Auth' is defined but never used.","React Hook useEffect has a missing dependency: 'HistoryStore'. Either include it or remove the dependency array.",["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [UserStore]",{"range":"134","text":"135"},"Update the dependencies array to be: [HistoryStore]",{"range":"136","text":"137"},[1372,1374],"[UserStore]",[673,675],"[HistoryStore]"]